/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package bankingsystem;

import java.sql.*;
import javax.swing.*;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.RandomAccessFile;


public class registernow extends javax.swing.JFrame {

    Connection con = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    /**
     * Creates new form registernow
     */
    String code;
    String finalhashval;

    public registernow(String code) {
        initComponents();
        this.setLocationRelativeTo(null);
        this.code = code;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        kGradientPanel1 = new keeptoo.KGradientPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        idnum = new javax.swing.JTextField();
        accnum = new javax.swing.JTextField();
        email = new javax.swing.JTextField();
        phone = new javax.swing.JTextField();
        dob = new javax.swing.JTextField();
        user = new javax.swing.JTextField();
        pass = new javax.swing.JTextField();
        kButton1 = new com.k33ptoo.components.KButton();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        kGradientPanel1.setkEndColor(new java.awt.Color(102, 255, 255));
        kGradientPanel1.setkStartColor(new java.awt.Color(255, 153, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("REGISTER");

        jLabel2.setText("ID Type");

        jLabel3.setText("Selected ID number");

        jLabel4.setText("Account number");

        jLabel5.setText("Email ID");

        jLabel6.setText("Registered phone");

        jLabel7.setText("Date of Birth");

        jLabel8.setText("Username");

        jLabel9.setText("Password");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "National Identity card (NIC)", "Passport", "Aadhaar Card" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailActionPerformed(evt);
            }
        });

        kButton1.setText("Register");
        kButton1.setkBorderRadius(40);
        kButton1.setkEndColor(new java.awt.Color(0, 0, 0));
        kButton1.setkStartColor(new java.awt.Color(0, 0, 0));
        kButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kButton1ActionPerformed(evt);
            }
        });

        jLabel10.setText("Already Registered? Login now!");
        jLabel10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel10MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout kGradientPanel1Layout = new javax.swing.GroupLayout(kGradientPanel1);
        kGradientPanel1.setLayout(kGradientPanel1Layout);
        kGradientPanel1Layout.setHorizontalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addGap(304, 304, 304)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addGap(181, 181, 181)
                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(jLabel2))
                        .addGap(26, 26, 26)
                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(kButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(idnum)
                            .addComponent(accnum)
                            .addComponent(email)
                            .addComponent(phone)
                            .addComponent(dob)
                            .addComponent(user)
                            .addComponent(pass)
                            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(180, Short.MAX_VALUE))
        );
        kGradientPanel1Layout.setVerticalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel1)
                .addGap(32, 32, 32)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(idnum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(accnum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(phone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(dob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(user, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(pass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(kButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(kGradientPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void emailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailActionPerformed

    private void jLabel10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseClicked
        // TODO add your handling code here:
        Loginpage obj = new Loginpage("");
        obj.setVisible(true);
        dispose();
    }//GEN-LAST:event_jLabel10MouseClicked

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void kButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kButton1ActionPerformed
        // TODO add your handling code here:
        try {
            RandomAccessFile file = new RandomAccessFile("register.txt", "rw");
            String username = user.getText();
            String password = pass.getText();
            String ID = jComboBox1.getSelectedItem().toString();
            String IDnum = idnum.getText();
            String accountNumber = accnum.getText();
            int intAccNum = Integer.parseInt(accountNumber);
            String Email = email.getText();
            String Phone = phone.getText();
            String DOB = dob.getText();

            if ((idnum.getText().isEmpty()) || (accnum.getText().isEmpty()) || (email.getText().isEmpty()) || (phone.getText().isEmpty()) || (pass.getText().isEmpty())) {
                JOptionPane.showMessageDialog(null, "Please fill all the deatils!");
                return;
            }
            if (accountNumber.length() != 4) {
                JOptionPane.showMessageDialog(null, "Account number should be of length 4");
                return;
            }
            if (password.length() < 6) {
                JOptionPane.showMessageDialog(null, "Password should contain minimum 6 characters");
                return;
            }
            if (Phone.length() < 6) {
                JOptionPane.showMessageDialog(null, "Invalid Phone Number");
                return;
            }
            int flag = check(accountNumber, username);
            int hash1 = intAccNum % 100;
            int finalHash = 0;

            PrintWriter pw1 = new PrintWriter(new FileOutputStream(new File("balance.txt"), true));
            PrintWriter pw = new PrintWriter(new FileOutputStream(new File("register.txt"), true));
            String bal = accountNumber + "|" + "500";
            for (String name : first.hm.keySet()) {
                System.out.println(name);
            }
            String k = "";
            boolean unique = true;
            int terminate = 0;
            String b = "";
            String hash1val = Integer.toString(hash1);
            String posval = Long.toString(first.pos);
            if (flag == 0) {
                if (!first.hm.containsKey(hash1val)) {
                    b = username + "|" + password + "|" + ID + "|" + IDnum + "|" + accountNumber + "|" + Email + "|" + Phone + "|" + DOB + "|" + hash1val + "|" + posval + "|";
                    first.hm.put(hash1val, posval);
                    first.acc.put(accountNumber, hash1val);
                    
                    pw.println(b);
                    pw1.println(bal);
                    pw.flush();
                    pw.close();
                    pw1.flush();
                    pw1.close();
                    JOptionPane.showMessageDialog(null, "Account has been successfully registered");
                    file.close();

                    finalhashval = hash1val;
                    Loginpage l = new Loginpage("");
                    l.setVisible(true);
                    dispose();
                } else {
                    int hash2 = intAccNum % 10;
                    finalHash = hash1 + hash2;
                    String hash2val = Integer.toString(finalHash);
                    JOptionPane.showMessageDialog(null, "First Collision");
                    if (!first.hm.containsKey(hash2val)) {
                        b = username + "|" + password + "|" + ID + "|" + IDnum + "|" + accountNumber + "|" + Email + "|" + Phone + "|" + DOB + "|" + hash2val + "|" + posval + "|";
                        first.hm.put(hash2val, posval);
                        first.acc.put(accountNumber, hash2val);
                        pw.println(b);
                        pw1.println(bal);
                        pw.flush();
                        pw.close();
                        pw1.flush();
                        pw1.close();
                        finalhashval = hash2val;
                        JOptionPane.showMessageDialog(null, "Account has been successfully registered");
                        file.close();
                        Loginpage l = new Loginpage("");
                        l.setVisible(true);
                        dispose();
                    } else {
                        JOptionPane.showMessageDialog(null, "Second Collision. Can't Insert Data");
                    }
                }
            }
//            while ((k = br.readLine()) != null) {
//                String result1[] = k.split("\\|");
//                if (result1[0].equals(accountNumber)) {
//                    JOptionPane.showMessageDialog(null, "Account number already exists");
//                    registernow obj = new registernow("");
//                    obj.setVisible(true);
//                    terminate=1;
//                    dispose();
//                    break;
//                }
//                if (Integer.parseInt(result1[8]) == hash1) {
//                    //br.close();
//                    f = 1;
//
//                }
//            }
//            br.close();
//            if (f == 1 && terminate==0) {
//                JOptionPane.showMessageDialog(null, "FIRSt COLLISION");
//
//                BufferedReader br1 = new BufferedReader(new FileReader("register.txt"));
//
//                int hash2 = intAccNum % 10;
//                finalHash = hash1 + hash2;
//                while ((k = br1.readLine()) != null) {
//                    String result1[] = k.split("\\|");
//                    if (Integer.parseInt(result1[8]) == finalHash) {
//
//                        JOptionPane.showMessageDialog(null, "Cannot insert data,DOUBLE COLLISION");
//                        br1.close();
//                        s = 1;
//                        break;
//
//                    }
//                }
//
//            }
//
            //String b = "";
//            if (s == 0 && f == 1 && terminate ==0) {
//                String convertedHash = String.valueOf(finalHash);
//
//                b = username + "|" + password + "|" + ID + "|" + IDnum + "|" + accountNumber + "|" + Email + "|" + Phone + "|" + DOB + "|" + convertedHash + "|";
//
//                //pw.println(b);
//                pw1.println(bal);
//                JOptionPane.showMessageDialog(null, "Account has been successfully registered after first collision");
//                //pw.flush();
//                //pw.close();
//                Loginpage l = new Loginpage("");
//                l.setVisible(true);
//                dispose();
//
//                pw1.flush();
//                pw1.close();
//
//            }

//            if (f == 0 && terminate==0) {
//                
//                PrintWriter pw2= new PrintWriter(new FileOutputStream(new File("index.txt"), true));
//                long address=file.getFilePointer();
//                String addr=String.valueOf((int)address);
//                String convertedHash1 = String.valueOf(hash1);
//                String x="-";
//                b = username + "|" + password + "|" + ID + "|" + IDnum + "|" + accountNumber + "|" + Email + "|" + Phone + "|" + DOB + "|" + convertedHash1 + "|"+addr+"$";
//                StringBuilder sb=new StringBuilder(b);
//                if((sb.length())<100)
//                {
//                    for(int i=sb.length();i<99;i++)
//                    sb.append(x);
//                }
//                file.seek(address);
//                String index=convertedHash1+"|"+addr;
//                pw2.println(index);
//                pw.println(sb.toString());
////                file.seek(address+100);
//               // file.writeBytes(sb.toString());
//                pw1.println(bal);
//                JOptionPane.showMessageDialog(null, "Account has been successfully registered");
//                file.close();
//                Loginpage l = new Loginpage("");
//                l.setVisible(true);
//                dispose();
//                pw2.flush();
//                pw2.close();
//                pw.flush();
//                pw.close();
//                pw1.flush();
//                pw1.close();
//                //br.close();
//
//            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e + " been successfully registered");

        }
    }//GEN-LAST:event_kButton1ActionPerformed
    public int check(String accountNumber, String username) {
        try {
            if (first.acc.containsKey(accountNumber)) {
                JOptionPane.showMessageDialog(this, "User Already exists,Please change your credentials");
            }
            return 0;
        } catch (Exception e) {
            return -1;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(registernow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(registernow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(registernow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(registernow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new registernow("").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField accnum;
    private javax.swing.JTextField dob;
    private javax.swing.JTextField email;
    private javax.swing.JTextField idnum;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private com.k33ptoo.components.KButton kButton1;
    private keeptoo.KGradientPanel kGradientPanel1;
    private javax.swing.JTextField pass;
    private javax.swing.JTextField phone;
    private javax.swing.JTextField user;
    // End of variables declaration//GEN-END:variables
}
